# Assuming art.py contains a variable 'logo' with the artwork
# TODO-1: Import and print the logo from art.py when the program starts.
import art
print(art.logo)

alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

def caesar(start_text, shift_amount, cipher_direction):
    end_text = ""
    if cipher_direction == "decode":
        shift_amount *= -1
    for char in start_text:
        # TODO-3: What happens if the user enters a number/symbol/space?
        # Can you fix the code to keep the number/symbol/space when the text is encoded/decoded?
        if char in alphabet:
            position = alphabet.index(char)
            new_position = position + shift_amount
            end_text += alphabet[new_position]
        else:
            # Keeping the character as it is if it's not in the alphabet
            end_text += char
    print(f"Here's the {cipher_direction}d result: {end_text}")

# Main program loop
while True:
    direction = input("Type 'encode' to encrypt, type 'decode' to decrypt:\n")
    text = input("Type your message:\n").lower()
    shift = int(input("Type the shift number:\n"))

    # TODO-2: What if the user enters a shift that is greater than the number of letters in the alphabet?
    # Adjust shift if it's greater than the number of letters in the alphabet
    shift = shift % 26

    caesar(start_text=text, shift_amount=shift, cipher_direction=direction)

    # TODO-4: Can you figure out a way to ask the user if they want to restart the cipher program?
    restart = input("Type 'yes' if you want to go again. Otherwise type 'no'.\n")
    if restart.lower() != 'yes':
        print('Goodbye')
        break
